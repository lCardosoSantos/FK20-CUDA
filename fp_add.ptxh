// bls12_381: Arithmetic for BLS12-381
// Copyright 2022-2023 Dag Arne Osvik
// Copyright 2022-2023 Luan Cardoso dos Santos

#ifndef FP_ADD

/**
 * @brief PTX macro for addition of two residues modulo p. Z←X+Y
 * Z, X and X may be the same. Modifies T6.
 * 
 * For inclusion directly into ptx code by the C preprocessor.
 */
#define FP_ADD(Z, X, Y, T) \
    /* z = x + y */ \
 \
    add.u64.cc  Z##0, X##0, Y##0; newline\
    addc.u64.cc Z##1, X##1, Y##1; newline\
    addc.u64.cc Z##2, X##2, Y##2; newline\
    addc.u64.cc Z##3, X##3, Y##3; newline\
    addc.u64.cc Z##4, X##4, Y##4; newline\
    addc.u64.cc Z##5, X##5, Y##5; newline\
    addc.u64    Z##6,    0,    0; newline\
 \
    /* gt = (z>>320) > (m>>320) */ newline\
    /* nz = (z>>384) > 0 */ newline\
 \
    setp.gt.u64 gt, Z##5, 0x1a0111ea397fe69aU; newline\
    setp.ne.u64 nz, Z##6, 0; newline\
 \
    /* If gt then subtract m */ newline\
 \
    @gt sub.u64.cc  Z##0, Z##0, 0xb9feffffffffaaabU; newline\
    @gt subc.u64.cc Z##1, Z##1, 0x1eabfffeb153ffffU; newline\
    @gt subc.u64.cc Z##2, Z##2, 0x6730d2a0f6b0f624U; newline\
    @gt subc.u64.cc Z##3, Z##3, 0x64774b84f38512bfU; newline\
    @gt subc.u64.cc Z##4, Z##4, 0x4b1ba7b6434bacd7U; newline\
    @gt subc.u64.cc Z##5, Z##5, 0x1a0111ea397fe69aU; newline\
 \
    /* If nz then subtract mmu0 (= 9m) */ newline\
 \
    @nz sub.u64.cc  Z##0, Z##0, 0x89f6fffffffd0003U; newline\
    @nz subc.u64.cc Z##1, Z##1, 0x140bfff43bf3fffdU; newline\
    @nz subc.u64.cc Z##2, Z##2, 0xa0b767a8ac38a745U; newline\
    @nz subc.u64.cc Z##3, Z##3, 0x8831a7ac8fada8baU; newline\
    @nz subc.u64.cc Z##4, Z##4, 0xa3f8e5685da91392U; newline\
    @nz subc.u64.cc Z##5, Z##5, 0xea09a13c057f1b6cU

#endif
